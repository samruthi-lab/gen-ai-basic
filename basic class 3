{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNRKKlfY75PDM6uketDgZ8u",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/samruthi-lab/gen-ai-basic/blob/main/basic%20class%203\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "id": "yaKEpculVWp-",
        "outputId": "bd38c0b9-0328-4d7c-e6e5-dc7b40a4fffe"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 0                    1               2   \\\n",
              "0      citrus fruit  semi-finished bread       margarine   \n",
              "1    tropical fruit               yogurt          coffee   \n",
              "2        whole milk                  NaN             NaN   \n",
              "3         pip fruit               yogurt   cream cheese    \n",
              "4  other vegetables           whole milk  condensed milk   \n",
              "\n",
              "                         3    4    5    6    7    8    9   ...   22   23   24  \\\n",
              "0               ready soups  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN  NaN   \n",
              "1                       NaN  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN  NaN   \n",
              "2                       NaN  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN  NaN   \n",
              "3              meat spreads  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN  NaN   \n",
              "4  long life bakery product  NaN  NaN  NaN  NaN  NaN  NaN  ...  NaN  NaN  NaN   \n",
              "\n",
              "    25   26   27   28   29   30   31  \n",
              "0  NaN  NaN  NaN  NaN  NaN  NaN  NaN  \n",
              "1  NaN  NaN  NaN  NaN  NaN  NaN  NaN  \n",
              "2  NaN  NaN  NaN  NaN  NaN  NaN  NaN  \n",
              "3  NaN  NaN  NaN  NaN  NaN  NaN  NaN  \n",
              "4  NaN  NaN  NaN  NaN  NaN  NaN  NaN  \n",
              "\n",
              "[5 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-939e053c-00c8-4564-aa6b-4eba7432eab6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>22</th>\n",
              "      <th>23</th>\n",
              "      <th>24</th>\n",
              "      <th>25</th>\n",
              "      <th>26</th>\n",
              "      <th>27</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>citrus fruit</td>\n",
              "      <td>semi-finished bread</td>\n",
              "      <td>margarine</td>\n",
              "      <td>ready soups</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>tropical fruit</td>\n",
              "      <td>yogurt</td>\n",
              "      <td>coffee</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>whole milk</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>pip fruit</td>\n",
              "      <td>yogurt</td>\n",
              "      <td>cream cheese</td>\n",
              "      <td>meat spreads</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>other vegetables</td>\n",
              "      <td>whole milk</td>\n",
              "      <td>condensed milk</td>\n",
              "      <td>long life bakery product</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows Ã— 32 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-939e053c-00c8-4564-aa6b-4eba7432eab6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-939e053c-00c8-4564-aa6b-4eba7432eab6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-939e053c-00c8-4564-aa6b-4eba7432eab6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-b4ee54b7-05f2-4a2f-820e-2782c8c1d5cb\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b4ee54b7-05f2-4a2f-820e-2782c8c1d5cb')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-b4ee54b7-05f2-4a2f-820e-2782c8c1d5cb button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "dt"
            }
          },
          "metadata": {},
          "execution_count": 1
        }
      ],
      "source": [
        "\n",
        "\n",
        "import pandas as pd\n",
        "from mlxtend.frequent_patterns import apriori, association_rules\n",
        "from mlxtend.preprocessing import TransactionEncoder\n",
        "\n",
        "dt = pd.read_csv('/content/groceries.csv', header=None)\n",
        "dt.head()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "transaction = dt.apply(lambda x: x.dropna().tolist(), axis = 1).tolist()\n",
        "transaction[0:3]\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p13hqEluXMcv",
        "outputId": "6b7cc43c-8330-4d37-d228-c4f6078ce211"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[['citrus fruit', 'semi-finished bread', 'margarine', 'ready soups'],\n",
              " ['tropical fruit', 'yogurt', 'coffee'],\n",
              " ['whole milk']]"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "te = TransactionEncoder()\n",
        "te_ary = te.fit(transaction).transform(transaction)\n",
        "df = pd.DataFrame(te_ary, columns = te.columns_)\n",
        "df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 290
        },
        "id": "ciWCkKeuZaII",
        "outputId": "0bdf7951-3ecf-41c4-dcea-543d39b4dd10"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Instant food products  UHT-milk  abrasive cleaner  artif. sweetener  \\\n",
              "9830                  False     False             False             False   \n",
              "9831                  False     False             False             False   \n",
              "9832                  False     False             False             False   \n",
              "9833                  False     False             False             False   \n",
              "9834                  False     False             False             False   \n",
              "\n",
              "      baby cosmetics  baby food   bags  baking powder  bathroom cleaner  \\\n",
              "9830           False      False  False          False             False   \n",
              "9831           False      False  False          False             False   \n",
              "9832           False      False  False          False             False   \n",
              "9833           False      False  False          False             False   \n",
              "9834           False      False  False          False             False   \n",
              "\n",
              "       beef  ...  turkey  vinegar  waffles  whipped/sour cream  whisky  \\\n",
              "9830   True  ...   False    False    False                True   False   \n",
              "9831  False  ...   False    False    False               False   False   \n",
              "9832  False  ...   False    False    False               False   False   \n",
              "9833  False  ...   False    False    False               False   False   \n",
              "9834  False  ...   False     True    False               False   False   \n",
              "\n",
              "      white bread  white wine  whole milk  yogurt  zwieback  \n",
              "9830        False       False        True   False     False  \n",
              "9831        False       False       False   False     False  \n",
              "9832        False       False       False    True     False  \n",
              "9833        False       False       False   False     False  \n",
              "9834        False       False       False   False     False  \n",
              "\n",
              "[5 rows x 169 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7069d2ce-1b31-42f9-bc66-243b1671e023\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Instant food products</th>\n",
              "      <th>UHT-milk</th>\n",
              "      <th>abrasive cleaner</th>\n",
              "      <th>artif. sweetener</th>\n",
              "      <th>baby cosmetics</th>\n",
              "      <th>baby food</th>\n",
              "      <th>bags</th>\n",
              "      <th>baking powder</th>\n",
              "      <th>bathroom cleaner</th>\n",
              "      <th>beef</th>\n",
              "      <th>...</th>\n",
              "      <th>turkey</th>\n",
              "      <th>vinegar</th>\n",
              "      <th>waffles</th>\n",
              "      <th>whipped/sour cream</th>\n",
              "      <th>whisky</th>\n",
              "      <th>white bread</th>\n",
              "      <th>white wine</th>\n",
              "      <th>whole milk</th>\n",
              "      <th>yogurt</th>\n",
              "      <th>zwieback</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>9830</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9831</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9832</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9833</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9834</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>...</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows Ã— 169 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7069d2ce-1b31-42f9-bc66-243b1671e023')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7069d2ce-1b31-42f9-bc66-243b1671e023 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7069d2ce-1b31-42f9-bc66-243b1671e023');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e3dd46c9-4642-4611-8d3f-b65663d15db0\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e3dd46c9-4642-4611-8d3f-b65663d15db0')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e3dd46c9-4642-4611-8d3f-b65663d15db0 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "frequent_items = apriori(df, min_support = 0.03, use_colnames = True)\n",
        "frequent_items.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "dqcf5ZfJZumi",
        "outputId": "240ba537-8ce7-4986-944f-55972f67c5da"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    support         itemsets\n",
              "0  0.033452       (UHT-milk)\n",
              "1  0.052466           (beef)\n",
              "2  0.033249        (berries)\n",
              "3  0.080529   (bottled beer)\n",
              "4  0.110524  (bottled water)\n",
              "5  0.064870    (brown bread)\n",
              "6  0.055414         (butter)\n",
              "7  0.077682    (canned beer)\n",
              "8  0.042908        (chicken)\n",
              "9  0.049619      (chocolate)"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d60b71e4-b2ac-4c7f-8d62-520c95edad30\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>support</th>\n",
              "      <th>itemsets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.033452</td>\n",
              "      <td>(UHT-milk)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.052466</td>\n",
              "      <td>(beef)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.033249</td>\n",
              "      <td>(berries)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.080529</td>\n",
              "      <td>(bottled beer)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.110524</td>\n",
              "      <td>(bottled water)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.064870</td>\n",
              "      <td>(brown bread)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.055414</td>\n",
              "      <td>(butter)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.077682</td>\n",
              "      <td>(canned beer)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.042908</td>\n",
              "      <td>(chicken)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.049619</td>\n",
              "      <td>(chocolate)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d60b71e4-b2ac-4c7f-8d62-520c95edad30')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d60b71e4-b2ac-4c7f-8d62-520c95edad30 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d60b71e4-b2ac-4c7f-8d62-520c95edad30');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d7a0d50c-6d7c-45d9-b0d4-e2b4d71cf621\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7a0d50c-6d7c-45d9-b0d4-e2b4d71cf621')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d7a0d50c-6d7c-45d9-b0d4-e2b4d71cf621 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "frequent_items",
              "summary": "{\n  \"name\": \"frequent_items\",\n  \"rows\": 63,\n  \"fields\": [\n    {\n      \"column\": \"support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0440028799986925,\n        \"min\": 0.030096593797661414,\n        \"max\": 0.25551601423487547,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          0.03345195729537367,\n          0.06487036095577021,\n          0.03385866802236909\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"itemsets\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          \"frozenset({'whipped/sour cream', 'whole milk'})\",\n          \"frozenset({'rolls/buns', 'yogurt'})\",\n          \"frozenset({'UHT-milk'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rules = association_rules(frequent_items, metric = 'lift', min_threshold = 0.8)\n",
        "rules.sort_values(by = 'confidence', ascending = False)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1536
        },
        "id": "3u5RnxTKawz2",
        "outputId": "b696382f-437b-4c7d-ea65-de42e4d9e13f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             antecedents           consequents  antecedent support  \\\n",
              "34  (whipped/sour cream)          (whole milk)            0.071683   \n",
              "29     (root vegetables)          (whole milk)            0.108998   \n",
              "7      (root vegetables)    (other vegetables)            0.108998   \n",
              "33      (tropical fruit)          (whole milk)            0.104931   \n",
              "37              (yogurt)          (whole milk)            0.139502   \n",
              "19           (pip fruit)          (whole milk)            0.075648   \n",
              "12    (other vegetables)          (whole milk)            0.193493   \n",
              "17              (pastry)          (whole milk)            0.088968   \n",
              "2         (citrus fruit)          (whole milk)            0.082766   \n",
              "11      (tropical fruit)    (other vegetables)            0.104931   \n",
              "21             (sausage)          (rolls/buns)            0.093950   \n",
              "15              (yogurt)    (other vegetables)            0.139502   \n",
              "1        (bottled water)          (whole milk)            0.110524   \n",
              "24          (rolls/buns)          (whole milk)            0.183935   \n",
              "13          (whole milk)    (other vegetables)            0.255516   \n",
              "27              (yogurt)          (rolls/buns)            0.139502   \n",
              "6     (other vegetables)     (root vegetables)            0.193493   \n",
              "4           (rolls/buns)    (other vegetables)            0.183935   \n",
              "30                (soda)          (whole milk)            0.174377   \n",
              "14    (other vegetables)              (yogurt)            0.193493   \n",
              "25          (whole milk)          (rolls/buns)            0.255516   \n",
              "5     (other vegetables)          (rolls/buns)            0.193493   \n",
              "22                (soda)          (rolls/buns)            0.174377   \n",
              "36          (whole milk)              (yogurt)            0.255516   \n",
              "23          (rolls/buns)                (soda)            0.183935   \n",
              "28          (whole milk)     (root vegetables)            0.255516   \n",
              "8                 (soda)    (other vegetables)            0.174377   \n",
              "26          (rolls/buns)              (yogurt)            0.183935   \n",
              "10    (other vegetables)      (tropical fruit)            0.193493   \n",
              "9     (other vegetables)                (soda)            0.193493   \n",
              "20          (rolls/buns)             (sausage)            0.183935   \n",
              "32          (whole milk)      (tropical fruit)            0.255516   \n",
              "31          (whole milk)                (soda)            0.255516   \n",
              "0           (whole milk)       (bottled water)            0.255516   \n",
              "16          (whole milk)              (pastry)            0.255516   \n",
              "35          (whole milk)  (whipped/sour cream)            0.255516   \n",
              "3           (whole milk)        (citrus fruit)            0.255516   \n",
              "18          (whole milk)           (pip fruit)            0.255516   \n",
              "\n",
              "    consequent support   support  confidence      lift  representativity  \\\n",
              "34            0.255516  0.032232    0.449645  1.759754               1.0   \n",
              "29            0.255516  0.048907    0.448694  1.756031               1.0   \n",
              "7             0.193493  0.047382    0.434701  2.246605               1.0   \n",
              "33            0.255516  0.042298    0.403101  1.577595               1.0   \n",
              "37            0.255516  0.056024    0.401603  1.571735               1.0   \n",
              "19            0.255516  0.030097    0.397849  1.557043               1.0   \n",
              "12            0.255516  0.074835    0.386758  1.513634               1.0   \n",
              "17            0.255516  0.033249    0.373714  1.462587               1.0   \n",
              "2             0.255516  0.030503    0.368550  1.442377               1.0   \n",
              "11            0.193493  0.035892    0.342054  1.767790               1.0   \n",
              "21            0.183935  0.030605    0.325758  1.771048               1.0   \n",
              "15            0.193493  0.043416    0.311224  1.608457               1.0   \n",
              "1             0.255516  0.034367    0.310948  1.216940               1.0   \n",
              "24            0.255516  0.056634    0.307905  1.205032               1.0   \n",
              "13            0.193493  0.074835    0.292877  1.513634               1.0   \n",
              "27            0.183935  0.034367    0.246356  1.339363               1.0   \n",
              "6             0.108998  0.047382    0.244877  2.246605               1.0   \n",
              "4             0.193493  0.042603    0.231620  1.197047               1.0   \n",
              "30            0.255516  0.040061    0.229738  0.899112               1.0   \n",
              "14            0.139502  0.043416    0.224383  1.608457               1.0   \n",
              "25            0.183935  0.056634    0.221647  1.205032               1.0   \n",
              "5             0.183935  0.042603    0.220179  1.197047               1.0   \n",
              "22            0.183935  0.038332    0.219825  1.195124               1.0   \n",
              "36            0.139502  0.056024    0.219260  1.571735               1.0   \n",
              "23            0.174377  0.038332    0.208402  1.195124               1.0   \n",
              "28            0.108998  0.048907    0.191405  1.756031               1.0   \n",
              "8             0.193493  0.032740    0.187755  0.970348               1.0   \n",
              "26            0.139502  0.034367    0.186844  1.339363               1.0   \n",
              "10            0.104931  0.035892    0.185497  1.767790               1.0   \n",
              "9             0.174377  0.032740    0.169207  0.970348               1.0   \n",
              "20            0.093950  0.030605    0.166390  1.771048               1.0   \n",
              "32            0.104931  0.042298    0.165539  1.577595               1.0   \n",
              "31            0.174377  0.040061    0.156785  0.899112               1.0   \n",
              "0             0.110524  0.034367    0.134501  1.216940               1.0   \n",
              "16            0.088968  0.033249    0.130123  1.462587               1.0   \n",
              "35            0.071683  0.032232    0.126144  1.759754               1.0   \n",
              "3             0.082766  0.030503    0.119379  1.442377               1.0   \n",
              "18            0.075648  0.030097    0.117788  1.557043               1.0   \n",
              "\n",
              "    leverage  conviction  zhangs_metric   jaccard  certainty  kulczynski  \n",
              "34  0.013916    1.352735       0.465077  0.109273   0.260757    0.287895  \n",
              "29  0.021056    1.350401       0.483202  0.154961   0.259479    0.320049  \n",
              "7   0.026291    1.426693       0.622764  0.185731   0.299078    0.339789  \n",
              "33  0.015486    1.247252       0.409045  0.132950   0.198238    0.284320  \n",
              "37  0.020379    1.244132       0.422732  0.165267   0.196226    0.310432  \n",
              "19  0.010767    1.236375       0.387036  0.099966   0.191184    0.257818  \n",
              "12  0.025394    1.214013       0.420750  0.200000   0.176286    0.339817  \n",
              "17  0.010516    1.188729       0.347166  0.106828   0.158765    0.251919  \n",
              "2   0.009355    1.179008       0.334375  0.099108   0.151829    0.243965  \n",
              "11  0.015589    1.225796       0.485239  0.136716   0.184204    0.263775  \n",
              "21  0.013324    1.210344       0.480506  0.123766   0.173788    0.246074  \n",
              "15  0.016424    1.170929       0.439613  0.149930   0.145977    0.267804  \n",
              "1   0.006126    1.080446       0.200417  0.103617   0.074456    0.222724  \n",
              "24  0.009636    1.075696       0.208496  0.147942   0.070369    0.264776  \n",
              "13  0.025394    1.140548       0.455803  0.200000   0.123228    0.339817  \n",
              "27  0.008708    1.082825       0.294453  0.118888   0.076490    0.216600  \n",
              "6   0.026291    1.179941       0.688008  0.185731   0.152500    0.339789  \n",
              "4   0.007013    1.049620       0.201713  0.127240   0.047274    0.225899  \n",
              "30 -0.004495    0.966533      -0.119646  0.102765  -0.034626    0.193261  \n",
              "14  0.016424    1.109436       0.469042  0.149930   0.098641    0.267804  \n",
              "25  0.009636    1.048452       0.228543  0.147942   0.046213    0.264776  \n",
              "5   0.007013    1.046477       0.204103  0.127240   0.044413    0.225899  \n",
              "22  0.006258    1.046003       0.197750  0.119797   0.043980    0.214114  \n",
              "36  0.020379    1.102157       0.488608  0.165267   0.092688    0.310432  \n",
              "23  0.006258    1.042983       0.200066  0.119797   0.041212    0.214114  \n",
              "28  0.021056    1.101913       0.578298  0.154961   0.092487    0.320049  \n",
              "8  -0.001000    0.992936      -0.035692  0.097694  -0.007114    0.178481  \n",
              "26  0.008708    1.058220       0.310486  0.118888   0.055017    0.216600  \n",
              "10  0.015589    1.098913       0.538522  0.136716   0.090010    0.263775  \n",
              "9  -0.001000    0.993776      -0.036507  0.097694  -0.006263    0.178481  \n",
              "20  0.013324    1.086899       0.533490  0.123766   0.079952    0.246074  \n",
              "32  0.015486    1.072631       0.491782  0.132950   0.067713    0.284320  \n",
              "31 -0.004495    0.979136      -0.130978  0.102765  -0.021308    0.193261  \n",
              "0   0.006126    1.027703       0.239450  0.103617   0.026956    0.222724  \n",
              "16  0.010516    1.047312       0.424831  0.106828   0.045174    0.251919  \n",
              "35  0.013916    1.062323       0.579917  0.109273   0.058667    0.287895  \n",
              "3   0.009355    1.041577       0.411963  0.099108   0.039917    0.243965  \n",
              "18  0.010767    1.047765       0.480544  0.099966   0.045588    0.257818  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4fa86125-7050-4349-9e07-5d6f43d171c1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>antecedents</th>\n",
              "      <th>consequents</th>\n",
              "      <th>antecedent support</th>\n",
              "      <th>consequent support</th>\n",
              "      <th>support</th>\n",
              "      <th>confidence</th>\n",
              "      <th>lift</th>\n",
              "      <th>representativity</th>\n",
              "      <th>leverage</th>\n",
              "      <th>conviction</th>\n",
              "      <th>zhangs_metric</th>\n",
              "      <th>jaccard</th>\n",
              "      <th>certainty</th>\n",
              "      <th>kulczynski</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>(whipped/sour cream)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.071683</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.032232</td>\n",
              "      <td>0.449645</td>\n",
              "      <td>1.759754</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.013916</td>\n",
              "      <td>1.352735</td>\n",
              "      <td>0.465077</td>\n",
              "      <td>0.109273</td>\n",
              "      <td>0.260757</td>\n",
              "      <td>0.287895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>(root vegetables)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.108998</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.048907</td>\n",
              "      <td>0.448694</td>\n",
              "      <td>1.756031</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.021056</td>\n",
              "      <td>1.350401</td>\n",
              "      <td>0.483202</td>\n",
              "      <td>0.154961</td>\n",
              "      <td>0.259479</td>\n",
              "      <td>0.320049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>(root vegetables)</td>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>0.108998</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.047382</td>\n",
              "      <td>0.434701</td>\n",
              "      <td>2.246605</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.026291</td>\n",
              "      <td>1.426693</td>\n",
              "      <td>0.622764</td>\n",
              "      <td>0.185731</td>\n",
              "      <td>0.299078</td>\n",
              "      <td>0.339789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>(tropical fruit)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.104931</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.042298</td>\n",
              "      <td>0.403101</td>\n",
              "      <td>1.577595</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.015486</td>\n",
              "      <td>1.247252</td>\n",
              "      <td>0.409045</td>\n",
              "      <td>0.132950</td>\n",
              "      <td>0.198238</td>\n",
              "      <td>0.284320</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>(yogurt)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.139502</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.056024</td>\n",
              "      <td>0.401603</td>\n",
              "      <td>1.571735</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.020379</td>\n",
              "      <td>1.244132</td>\n",
              "      <td>0.422732</td>\n",
              "      <td>0.165267</td>\n",
              "      <td>0.196226</td>\n",
              "      <td>0.310432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>(pip fruit)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.075648</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.030097</td>\n",
              "      <td>0.397849</td>\n",
              "      <td>1.557043</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.010767</td>\n",
              "      <td>1.236375</td>\n",
              "      <td>0.387036</td>\n",
              "      <td>0.099966</td>\n",
              "      <td>0.191184</td>\n",
              "      <td>0.257818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.074835</td>\n",
              "      <td>0.386758</td>\n",
              "      <td>1.513634</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.025394</td>\n",
              "      <td>1.214013</td>\n",
              "      <td>0.420750</td>\n",
              "      <td>0.200000</td>\n",
              "      <td>0.176286</td>\n",
              "      <td>0.339817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>(pastry)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.088968</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.033249</td>\n",
              "      <td>0.373714</td>\n",
              "      <td>1.462587</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.010516</td>\n",
              "      <td>1.188729</td>\n",
              "      <td>0.347166</td>\n",
              "      <td>0.106828</td>\n",
              "      <td>0.158765</td>\n",
              "      <td>0.251919</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(citrus fruit)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.082766</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.030503</td>\n",
              "      <td>0.368550</td>\n",
              "      <td>1.442377</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.009355</td>\n",
              "      <td>1.179008</td>\n",
              "      <td>0.334375</td>\n",
              "      <td>0.099108</td>\n",
              "      <td>0.151829</td>\n",
              "      <td>0.243965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>(tropical fruit)</td>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>0.104931</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.035892</td>\n",
              "      <td>0.342054</td>\n",
              "      <td>1.767790</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.015589</td>\n",
              "      <td>1.225796</td>\n",
              "      <td>0.485239</td>\n",
              "      <td>0.136716</td>\n",
              "      <td>0.184204</td>\n",
              "      <td>0.263775</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>(sausage)</td>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>0.093950</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.030605</td>\n",
              "      <td>0.325758</td>\n",
              "      <td>1.771048</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.013324</td>\n",
              "      <td>1.210344</td>\n",
              "      <td>0.480506</td>\n",
              "      <td>0.123766</td>\n",
              "      <td>0.173788</td>\n",
              "      <td>0.246074</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>(yogurt)</td>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>0.139502</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.043416</td>\n",
              "      <td>0.311224</td>\n",
              "      <td>1.608457</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.016424</td>\n",
              "      <td>1.170929</td>\n",
              "      <td>0.439613</td>\n",
              "      <td>0.149930</td>\n",
              "      <td>0.145977</td>\n",
              "      <td>0.267804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(bottled water)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.110524</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.034367</td>\n",
              "      <td>0.310948</td>\n",
              "      <td>1.216940</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.006126</td>\n",
              "      <td>1.080446</td>\n",
              "      <td>0.200417</td>\n",
              "      <td>0.103617</td>\n",
              "      <td>0.074456</td>\n",
              "      <td>0.222724</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.056634</td>\n",
              "      <td>0.307905</td>\n",
              "      <td>1.205032</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.009636</td>\n",
              "      <td>1.075696</td>\n",
              "      <td>0.208496</td>\n",
              "      <td>0.147942</td>\n",
              "      <td>0.070369</td>\n",
              "      <td>0.264776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.074835</td>\n",
              "      <td>0.292877</td>\n",
              "      <td>1.513634</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.025394</td>\n",
              "      <td>1.140548</td>\n",
              "      <td>0.455803</td>\n",
              "      <td>0.200000</td>\n",
              "      <td>0.123228</td>\n",
              "      <td>0.339817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>(yogurt)</td>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>0.139502</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.034367</td>\n",
              "      <td>0.246356</td>\n",
              "      <td>1.339363</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.008708</td>\n",
              "      <td>1.082825</td>\n",
              "      <td>0.294453</td>\n",
              "      <td>0.118888</td>\n",
              "      <td>0.076490</td>\n",
              "      <td>0.216600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>(root vegetables)</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.108998</td>\n",
              "      <td>0.047382</td>\n",
              "      <td>0.244877</td>\n",
              "      <td>2.246605</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.026291</td>\n",
              "      <td>1.179941</td>\n",
              "      <td>0.688008</td>\n",
              "      <td>0.185731</td>\n",
              "      <td>0.152500</td>\n",
              "      <td>0.339789</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.042603</td>\n",
              "      <td>0.231620</td>\n",
              "      <td>1.197047</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.007013</td>\n",
              "      <td>1.049620</td>\n",
              "      <td>0.201713</td>\n",
              "      <td>0.127240</td>\n",
              "      <td>0.047274</td>\n",
              "      <td>0.225899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>(soda)</td>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>0.174377</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.040061</td>\n",
              "      <td>0.229738</td>\n",
              "      <td>0.899112</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.004495</td>\n",
              "      <td>0.966533</td>\n",
              "      <td>-0.119646</td>\n",
              "      <td>0.102765</td>\n",
              "      <td>-0.034626</td>\n",
              "      <td>0.193261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>(yogurt)</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.139502</td>\n",
              "      <td>0.043416</td>\n",
              "      <td>0.224383</td>\n",
              "      <td>1.608457</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.016424</td>\n",
              "      <td>1.109436</td>\n",
              "      <td>0.469042</td>\n",
              "      <td>0.149930</td>\n",
              "      <td>0.098641</td>\n",
              "      <td>0.267804</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.056634</td>\n",
              "      <td>0.221647</td>\n",
              "      <td>1.205032</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.009636</td>\n",
              "      <td>1.048452</td>\n",
              "      <td>0.228543</td>\n",
              "      <td>0.147942</td>\n",
              "      <td>0.046213</td>\n",
              "      <td>0.264776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.042603</td>\n",
              "      <td>0.220179</td>\n",
              "      <td>1.197047</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.007013</td>\n",
              "      <td>1.046477</td>\n",
              "      <td>0.204103</td>\n",
              "      <td>0.127240</td>\n",
              "      <td>0.044413</td>\n",
              "      <td>0.225899</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>(soda)</td>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>0.174377</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.038332</td>\n",
              "      <td>0.219825</td>\n",
              "      <td>1.195124</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.006258</td>\n",
              "      <td>1.046003</td>\n",
              "      <td>0.197750</td>\n",
              "      <td>0.119797</td>\n",
              "      <td>0.043980</td>\n",
              "      <td>0.214114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(yogurt)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.139502</td>\n",
              "      <td>0.056024</td>\n",
              "      <td>0.219260</td>\n",
              "      <td>1.571735</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.020379</td>\n",
              "      <td>1.102157</td>\n",
              "      <td>0.488608</td>\n",
              "      <td>0.165267</td>\n",
              "      <td>0.092688</td>\n",
              "      <td>0.310432</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>(soda)</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.174377</td>\n",
              "      <td>0.038332</td>\n",
              "      <td>0.208402</td>\n",
              "      <td>1.195124</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.006258</td>\n",
              "      <td>1.042983</td>\n",
              "      <td>0.200066</td>\n",
              "      <td>0.119797</td>\n",
              "      <td>0.041212</td>\n",
              "      <td>0.214114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(root vegetables)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.108998</td>\n",
              "      <td>0.048907</td>\n",
              "      <td>0.191405</td>\n",
              "      <td>1.756031</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.021056</td>\n",
              "      <td>1.101913</td>\n",
              "      <td>0.578298</td>\n",
              "      <td>0.154961</td>\n",
              "      <td>0.092487</td>\n",
              "      <td>0.320049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>(soda)</td>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>0.174377</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.032740</td>\n",
              "      <td>0.187755</td>\n",
              "      <td>0.970348</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.001000</td>\n",
              "      <td>0.992936</td>\n",
              "      <td>-0.035692</td>\n",
              "      <td>0.097694</td>\n",
              "      <td>-0.007114</td>\n",
              "      <td>0.178481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>(yogurt)</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.139502</td>\n",
              "      <td>0.034367</td>\n",
              "      <td>0.186844</td>\n",
              "      <td>1.339363</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.008708</td>\n",
              "      <td>1.058220</td>\n",
              "      <td>0.310486</td>\n",
              "      <td>0.118888</td>\n",
              "      <td>0.055017</td>\n",
              "      <td>0.216600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>(tropical fruit)</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.104931</td>\n",
              "      <td>0.035892</td>\n",
              "      <td>0.185497</td>\n",
              "      <td>1.767790</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.015589</td>\n",
              "      <td>1.098913</td>\n",
              "      <td>0.538522</td>\n",
              "      <td>0.136716</td>\n",
              "      <td>0.090010</td>\n",
              "      <td>0.263775</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>(other vegetables)</td>\n",
              "      <td>(soda)</td>\n",
              "      <td>0.193493</td>\n",
              "      <td>0.174377</td>\n",
              "      <td>0.032740</td>\n",
              "      <td>0.169207</td>\n",
              "      <td>0.970348</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.001000</td>\n",
              "      <td>0.993776</td>\n",
              "      <td>-0.036507</td>\n",
              "      <td>0.097694</td>\n",
              "      <td>-0.006263</td>\n",
              "      <td>0.178481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>(rolls/buns)</td>\n",
              "      <td>(sausage)</td>\n",
              "      <td>0.183935</td>\n",
              "      <td>0.093950</td>\n",
              "      <td>0.030605</td>\n",
              "      <td>0.166390</td>\n",
              "      <td>1.771048</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.013324</td>\n",
              "      <td>1.086899</td>\n",
              "      <td>0.533490</td>\n",
              "      <td>0.123766</td>\n",
              "      <td>0.079952</td>\n",
              "      <td>0.246074</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(tropical fruit)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.104931</td>\n",
              "      <td>0.042298</td>\n",
              "      <td>0.165539</td>\n",
              "      <td>1.577595</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.015486</td>\n",
              "      <td>1.072631</td>\n",
              "      <td>0.491782</td>\n",
              "      <td>0.132950</td>\n",
              "      <td>0.067713</td>\n",
              "      <td>0.284320</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(soda)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.174377</td>\n",
              "      <td>0.040061</td>\n",
              "      <td>0.156785</td>\n",
              "      <td>0.899112</td>\n",
              "      <td>1.0</td>\n",
              "      <td>-0.004495</td>\n",
              "      <td>0.979136</td>\n",
              "      <td>-0.130978</td>\n",
              "      <td>0.102765</td>\n",
              "      <td>-0.021308</td>\n",
              "      <td>0.193261</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(bottled water)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.110524</td>\n",
              "      <td>0.034367</td>\n",
              "      <td>0.134501</td>\n",
              "      <td>1.216940</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.006126</td>\n",
              "      <td>1.027703</td>\n",
              "      <td>0.239450</td>\n",
              "      <td>0.103617</td>\n",
              "      <td>0.026956</td>\n",
              "      <td>0.222724</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(pastry)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.088968</td>\n",
              "      <td>0.033249</td>\n",
              "      <td>0.130123</td>\n",
              "      <td>1.462587</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.010516</td>\n",
              "      <td>1.047312</td>\n",
              "      <td>0.424831</td>\n",
              "      <td>0.106828</td>\n",
              "      <td>0.045174</td>\n",
              "      <td>0.251919</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(whipped/sour cream)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.071683</td>\n",
              "      <td>0.032232</td>\n",
              "      <td>0.126144</td>\n",
              "      <td>1.759754</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.013916</td>\n",
              "      <td>1.062323</td>\n",
              "      <td>0.579917</td>\n",
              "      <td>0.109273</td>\n",
              "      <td>0.058667</td>\n",
              "      <td>0.287895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(citrus fruit)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.082766</td>\n",
              "      <td>0.030503</td>\n",
              "      <td>0.119379</td>\n",
              "      <td>1.442377</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.009355</td>\n",
              "      <td>1.041577</td>\n",
              "      <td>0.411963</td>\n",
              "      <td>0.099108</td>\n",
              "      <td>0.039917</td>\n",
              "      <td>0.243965</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>(whole milk)</td>\n",
              "      <td>(pip fruit)</td>\n",
              "      <td>0.255516</td>\n",
              "      <td>0.075648</td>\n",
              "      <td>0.030097</td>\n",
              "      <td>0.117788</td>\n",
              "      <td>1.557043</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.010767</td>\n",
              "      <td>1.047765</td>\n",
              "      <td>0.480544</td>\n",
              "      <td>0.099966</td>\n",
              "      <td>0.045588</td>\n",
              "      <td>0.257818</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fa86125-7050-4349-9e07-5d6f43d171c1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4fa86125-7050-4349-9e07-5d6f43d171c1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4fa86125-7050-4349-9e07-5d6f43d171c1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-a84c3dae-f802-4862-96ef-0f2abcefb23d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a84c3dae-f802-4862-96ef-0f2abcefb23d')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-a84c3dae-f802-4862-96ef-0f2abcefb23d button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"rules\",\n  \"rows\": 38,\n  \"fields\": [\n    {\n      \"column\": \"antecedents\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"frozenset({'whole milk'})\",\n          \"frozenset({'bottled water'})\",\n          \"frozenset({'whipped/sour cream'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"consequents\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"frozenset({'citrus fruit'})\",\n          \"frozenset({'pastry'})\",\n          \"frozenset({'whole milk'})\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"antecedent support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.062120319680907025,\n        \"min\": 0.07168276563294357,\n        \"max\": 0.25551601423487547,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.25551601423487547,\n          0.11052364006100661,\n          0.07168276563294357\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"consequent support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06212031968090703,\n        \"min\": 0.07168276563294357,\n        \"max\": 0.25551601423487547,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.08276563294356888,\n          0.08896797153024912,\n          0.25551601423487547\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011368691744322111,\n        \"min\": 0.030096593797661414,\n        \"max\": 0.07483477376715811,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          0.032231825114387394,\n          0.048906964921199794,\n          0.030503304524656837\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"confidence\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10166013633169863,\n        \"min\": 0.1177875049741345,\n        \"max\": 0.449645390070922,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          0.13450059689614005,\n          0.11937922801432549,\n          0.40160349854227406\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lift\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3184143470431196,\n        \"min\": 0.8991123707740158,\n        \"max\": 2.2466049285887957,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          1.4423767905662055,\n          1.2050317893663836,\n          1.7677896385551983\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"representativity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"leverage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.00787088984655048,\n        \"min\": -0.004495166691694093,\n        \"max\": 0.026291398311075295,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.013915730550524943\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"conviction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10823666342955696,\n        \"min\": 0.9665329565383713,\n        \"max\": 1.4266929082333752,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          1.027703031046754\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"zhangs_metric\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.19840467071576115,\n        \"min\": -0.13097826201556603,\n        \"max\": 0.688008479803653,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          0.23944980596694065\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"jaccard\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.029606424890856284,\n        \"min\": 0.09769417475728155,\n        \"max\": 0.19999999999999996,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.10927266459841434\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"certainty\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08076348685870391,\n        \"min\": -0.03462586892172879,\n        \"max\": 0.29907831304897603,\n        \"num_unique_values\": 38,\n        \"samples\": [\n          0.02695626091375599\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"kulczynski\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.045624915488543596,\n        \"min\": 0.17848080903407082,\n        \"max\": 0.3398173951573729,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          0.28789472050302967\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "prd = input(\"Enter a product : \").lower()\n",
        "prd_rule = rules[rules['antecedents'].apply(lambda x: prd in x)]\n",
        "for i in prd_rule['consequents']:\n",
        "    print(list(i)[0])\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DVCm87ULcM-w",
        "outputId": "1283dd44-16eb-4d22-c96a-c8224ee21b1f"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Enter a product : wheat milk\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "YSQppWLzefcr"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}